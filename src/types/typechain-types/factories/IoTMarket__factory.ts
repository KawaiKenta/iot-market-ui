/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { IoTMarket, IoTMarketInterface } from "../IoTMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMerchandise",
    outputs: [
      {
        internalType: "contract Merchandise",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerchandises",
    outputs: [
      {
        internalType: "contract Merchandise[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Merchandise",
        name: "merchandise",
        type: "address",
      },
    ],
    name: "registerMerchandise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_merchandises",
    outputs: [
      {
        internalType: "contract Merchandise",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610529806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634dff0196146100515780634f37d2f6146100815780637b12fd101461009d578063c705a1a8146100bb575b600080fd5b61006b600480360381019061006691906102a0565b6100eb565b604051610078919061034c565b60405180910390f35b61009b600480360381019061009691906103b7565b61012a565b005b6100a5610190565b6040516100b291906104a2565b60405180910390f35b6100d560048036038101906100d091906102a0565b61021e565b6040516100e2919061034c565b60405180910390f35b600081815481106100fb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600080548060200260200160405190810160405280929190818152602001828054801561021457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101ca575b5050505050905090565b6000808281548110610233576102326104c4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080fd5b6000819050919050565b61027d8161026a565b811461028857600080fd5b50565b60008135905061029a81610274565b92915050565b6000602082840312156102b6576102b5610265565b5b60006102c48482850161028b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061031261030d610308846102cd565b6102ed565b6102cd565b9050919050565b6000610324826102f7565b9050919050565b600061033682610319565b9050919050565b6103468161032b565b82525050565b6000602082019050610361600083018461033d565b92915050565b6000610372826102cd565b9050919050565b600061038482610367565b9050919050565b61039481610379565b811461039f57600080fd5b50565b6000813590506103b18161038b565b92915050565b6000602082840312156103cd576103cc610265565b5b60006103db848285016103a2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104198161032b565b82525050565b600061042b8383610410565b60208301905092915050565b6000602082019050919050565b600061044f826103e4565b61045981856103ef565b935061046483610400565b8060005b8381101561049557815161047c888261041f565b975061048783610437565b925050600181019050610468565b5085935050505092915050565b600060208201905081810360008301526104bc8184610444565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122014d8711046d781488d401c20cbc5d1ae92829435a8d12c421aeefdecec03770964736f6c63430008130033";

type IoTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IoTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IoTMarket__factory extends ContractFactory {
  constructor(...args: IoTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IoTMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IoTMarket__factory {
    return super.connect(runner) as IoTMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IoTMarketInterface {
    return new Interface(_abi) as IoTMarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IoTMarket {
    return new Contract(address, _abi, runner) as unknown as IoTMarket;
  }
}
