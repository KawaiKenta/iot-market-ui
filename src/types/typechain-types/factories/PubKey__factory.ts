/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PubKey, PubKeyInterface } from "../PubKey";

const _abi = [
  {
    inputs: [],
    name: "PubKey__InvalidPubKey",
    type: "error",
  },
  {
    inputs: [],
    name: "PubKey__NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "getPubKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pubKey",
        type: "string",
      },
    ],
    name: "registerKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a40806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a80f2ba1461003b5780634ad02ef114610057575b600080fd5b610055600480360381019061005091906105a6565b610075565b005b61005f610103565b60405161006c919061066e565b60405180910390f35b61007e8161020f565b6100b4576040517facbb56e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090816100ff91906108a6565b5050565b606061010d610374565b610143576040517f295f0a5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461018c906106bf565b80601f01602080910402602001604051908101604052809291908181526020018280546101b8906106bf565b80156102055780601f106101da57610100808354040283529160200191610205565b820191906000526020600020905b8154815290600101906020018083116101e857829003601f168201915b5050505050905090565b6000808290507f7b000000000000000000000000000000000000000000000000000000000000008160008151811061024a57610249610978565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156102e357507f6e00000000000000000000000000000000000000000000000000000000000000816002815181106102b4576102b3610978565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b801561035a57507f7d00000000000000000000000000000000000000000000000000000000000000816001835161031a91906109d6565b8151811061032b5761032a610978565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b1561036957600191505061036f565b60009150505b919050565b6000806000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546103c0906106bf565b80601f01602080910402602001604051908101604052809291908181526020018280546103ec906106bf565b80156104395780601f1061040e57610100808354040283529160200191610439565b820191906000526020600020905b81548152906001019060200180831161041c57829003601f168201915b5050505050905060008151141591505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104b38261046a565b810181811067ffffffffffffffff821117156104d2576104d161047b565b5b80604052505050565b60006104e561044c565b90506104f182826104aa565b919050565b600067ffffffffffffffff8211156105115761051061047b565b5b61051a8261046a565b9050602081019050919050565b82818337600083830152505050565b6000610549610544846104f6565b6104db565b90508281526020810184848401111561056557610564610465565b5b610570848285610527565b509392505050565b600082601f83011261058d5761058c610460565b5b813561059d848260208601610536565b91505092915050565b6000602082840312156105bc576105bb610456565b5b600082013567ffffffffffffffff8111156105da576105d961045b565b5b6105e684828501610578565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561062957808201518184015260208101905061060e565b60008484015250505050565b6000610640826105ef565b61064a81856105fa565b935061065a81856020860161060b565b6106638161046a565b840191505092915050565b600060208201905081810360008301526106888184610635565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106d757607f821691505b6020821081036106ea576106e9610690565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610715565b61075c8683610715565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006107a361079e61079984610774565b61077e565b610774565b9050919050565b6000819050919050565b6107bd83610788565b6107d16107c9826107aa565b848454610722565b825550505050565b600090565b6107e66107d9565b6107f18184846107b4565b505050565b5b818110156108155761080a6000826107de565b6001810190506107f7565b5050565b601f82111561085a5761082b816106f0565b61083484610705565b81016020851015610843578190505b61085761084f85610705565b8301826107f6565b50505b505050565b600082821c905092915050565b600061087d6000198460080261085f565b1980831691505092915050565b6000610896838361086c565b9150826002028217905092915050565b6108af826105ef565b67ffffffffffffffff8111156108c8576108c761047b565b5b6108d282546106bf565b6108dd828285610819565b600060209050601f83116001811461091057600084156108fe578287015190505b610908858261088a565b865550610970565b601f19841661091e866106f0565b60005b8281101561094657848901518255600182019150602085019450602081019050610921565b86831015610963578489015161095f601f89168261086c565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e182610774565b91506109ec83610774565b9250828203905081811115610a0457610a036109a7565b5b9291505056fea264697066735822122010ab080ea2fd095f90065685900b4de4618a20eb993d2eb77c20a4f394a6ce4464736f6c63430008130033";

type PubKeyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PubKeyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PubKey__factory extends ContractFactory {
  constructor(...args: PubKeyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PubKey & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PubKey__factory {
    return super.connect(runner) as PubKey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PubKeyInterface {
    return new Interface(_abi) as PubKeyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PubKey {
    return new Contract(address, _abi, runner) as unknown as PubKey;
  }
}
